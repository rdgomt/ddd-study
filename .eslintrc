{
  "extends": ["@rdgomt/eslint-config", "plugin:boundaries/strict"],
  "ignorePatterns": [".husky", ".vscode", "coverage", "data", "dist", "node_modules", "**/*.js"],
  "overrides": [
    {
      "files": ["*.presenter.ts", "*-presenter.ts"],
      "rules": {
        "perfectionist/sort-objects": "off"
      }
    },
    {
      "files": ["*.controller.ts", "*-controller.ts"],
      "rules": {
        "sonarjs/no-small-switch": "off"
      }
    }
  ],
  "plugins": ["boundaries", "perfectionist"],
  "rules": {
    "boundaries/element-types": [
      "error",
      {
        "default": "disallow",
        "rules": [
          {
            "from": "core",
            "allow": ["core", "types", "utils"]
          },
          {
            "from": "domain",
            "allow": ["core", "domain", "tests", "types", "utils"]
          },
          {
            "from": "infra",
            "allow": ["*"]
          },
          {
            "from": "tests",
            "allow": ["*"]
          },
          {
            "from": "types",
            "allow": []
          },
          {
            "from": "utils",
            "allow": []
          }
        ]
      }
    ],
    "boundaries/no-ignored": "error",
    "boundaries/no-private": "error",
    "boundaries/no-unknown-files": "error",
    "boundaries/no-unknown": "error",

    "require-atomic-updates": "off", // TODO: estudar como resolver

    "@typescript-eslint/consistent-type-definitions": ["warn", "interface"],
    "@typescript-eslint/no-extraneous-class": "off",
    "max-statements": "off",
    "padding-line-between-statements": [
      "warn",
      {
        "blankLine": "always",
        "next": [
          "block",
          "break",
          "case",
          "cjs-export",
          "continue",
          "default",
          "do",
          "export",
          "for",
          "function",
          "if",
          "iife",
          "multiline-block-like",
          "multiline-const",
          "multiline-expression",
          "multiline-let",
          "multiline-var",
          "return",
          "switch",
          "throw",
          "try",
          "while",
          "with"
        ],
        "prev": "*"
      },
      {
        "blankLine": "never",
        "next": ["singleline-const", "singleline-let", "singleline-var"],
        "prev": ["singleline-const", "singleline-let", "singleline-var"]
      }
    ],

    "perfectionist/sort-array-includes": "warn",
    "perfectionist/sort-classes": "off",
    "perfectionist/sort-enums": "warn",
    "perfectionist/sort-interfaces": "warn",
    "perfectionist/sort-jsx-props": "warn",
    "perfectionist/sort-map-elements": "warn",
    "perfectionist/sort-named-imports": "warn",
    "perfectionist/sort-object-types": "warn",
    "perfectionist/sort-objects": "warn",
    "perfectionist/sort-union-types": "off",
    "typescript-sort-keys/interface": "off"
  },
  "settings": {
    "boundaries/elements": [
      {
        "type": "core",
        "pattern": "src/core"
      },
      {
        "type": "domain",
        "pattern": "src/domain"
      },
      {
        "type": "infra",
        "pattern": "src/infra"
      },
      {
        "type": "tests",
        "pattern": "src/tests"
      },
      {
        "type": "types",
        "pattern": "src/types"
      },
      {
        "type": "utils",
        "pattern": "src/utils/*"
      }
    ],
    "boundaries/include": ["src/**/*"]
  }
}

// TODO: chore: disable max-lines for repository files
